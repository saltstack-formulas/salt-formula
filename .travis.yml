# -*- coding: utf-8 -*-
# vim: ft=yaml
---
## Machine config
os: 'linux'
arch: 'amd64'
dist: 'bionic'
version: '~> 1.0'

## Language and cache config
language: 'ruby'
cache: 'bundler'

## Services config
services:
  - docker

## Script to run for the test stage
script:
  - bin/kitchen verify "${INSTANCE}"

## Stages and jobs matrix
stages:
  - test
  - name: 'release'
    if: 'branch = master AND type != pull_request'
jobs:
  include:
    ## Define the test stage that runs the linters (and testing matrix, if applicable)

    # Run all of the linters in a single job
    - language: 'node_js'
      node_js: 'lts/*'
      env: 'Lint'
      name: 'Lint: salt-lint, yamllint, rubocop, shellcheck & commitlint'
      before_install: 'skip'
      script:
        # Install and run `salt-lint`
        - pip install --user salt-lint
        - git ls-files -- '*.sls' '*.jinja' '*.j2' '*.tmpl' '*.tst'
                        | xargs salt-lint
        # Install and run `yamllint`
        # Need at least `v1.17.0` for the `yaml-files` setting
        - pip install --user yamllint>=1.17.0
        - yamllint -s .
        # Install and run `rubocop`
        - gem install rubocop
        - rubocop -d
        # Run `shellcheck` (already pre-installed in Travis)
        - shellcheck --version
        - git ls-files -- '*.sh' '*.bash' '*.ksh'
                        | xargs shellcheck
        # Install and run `commitlint`
        - npm i -D @commitlint/config-conventional
                   @commitlint/travis-cli
        - commitlint-travis

    ## Define the rest of the matrix based on Kitchen testing
    # Make sure the instances listed below match up with
    # the `platforms` defined in `kitchen.yml`
    - env: INSTANCE=v3001-py3-debian-10-3001-py3
    # - env: INSTANCE=v3001-py3-debian-9-3001-py3
    - env: INSTANCE=v3001-py3-ubuntu-2004-3001-py3
    # - env: INSTANCE=v3001-py3-ubuntu-1804-3001-py3
    - env: INSTANCE=v3001-py3-centos-8-3001-py3
    # - env: INSTANCE=v3001-py3-centos-7-3001-py3
    - env: INSTANCE=v3001-py3-fedora-32-3001-py3
    # - env: INSTANCE=v3001-py3-fedora-31-3001-py3
    # - env: INSTANCE=v3001-py3-opensuse-leap-152-3001-py3
    # - env: INSTANCE=v3001-py3-amazonlinux-2-3001-py3
    - env: INSTANCE=v3001-py3-oraclelinux-8-3001-py3
    # - env: INSTANCE=v3001-py3-oraclelinux-7-3001-py3
    # - env: INSTANCE=v3000-py3-debian-10-3000-3-py3
    # - env: INSTANCE=v3000-py3-debian-9-3000-3-py3
    # - env: INSTANCE=v3000-py3-ubuntu-1804-3000-3-py3
    # - env: INSTANCE=v3000-py3-centos-8-3000-3-py3
    # - env: INSTANCE=v3000-py3-centos-7-3000-3-py3
    - env: INSTANCE=v3000-py3-fedora-31-3000-3-py3
    - env: INSTANCE=v3000-py3-opensuse-leap-152-3000-3-py3
    - env: INSTANCE=v3000-py3-amazonlinux-2-3000-3-py3
    # - env: INSTANCE=v3000-py3-oraclelinux-8-3000-3-py3
    - env: INSTANCE=v3000-py3-oraclelinux-7-3000-3-py3
    - env: INSTANCE=v3000-py2-ubuntu-1804-3000-3-py2
    # - env: INSTANCE=v3000-py2-ubuntu-1604-3000-3-py2
    # - env: INSTANCE=v201902-py3-debian-10-2019-2-py3
    - env: INSTANCE=v201902-py3-debian-9-2019-2-py3
    # - env: INSTANCE=v201902-py3-ubuntu-1804-2019-2-py3
    - env: INSTANCE=v201902-py3-ubuntu-1604-2019-2-py3
    # - env: INSTANCE=v201902-py3-centos-8-2019-2-py3
    - env: INSTANCE=v201902-py3-centos-7-2019-2-py3
    # - env: INSTANCE=v201902-py3-fedora-31-2019-2-py3
    # - env: INSTANCE=v201902-py3-opensuse-leap-152-2019-2-py3
    # - env: INSTANCE=v201902-py3-amazonlinux-2-2019-2-py3
    - env: INSTANCE=v201902-py2-centos-6-2019-2-py2
    # - env: INSTANCE=v201902-py2-amazonlinux-1-2019-2-py2

    ## Define the release stage that runs `semantic-release`
    - stage: 'release'
      language: 'node_js'
      node_js: 'lts/*'
      env: 'Release'
      name: 'Run semantic-release inc. file updates to AUTHORS, CHANGELOG & FORMULA'
      before_install: 'skip'
      script:
        # Update `AUTHORS.md`
        - export MAINTAINER_TOKEN=${GH_TOKEN}
        - go get github.com/myii/maintainer
        - maintainer contributor

        # Install all dependencies required for `semantic-release`
        - npm i -D @semantic-release/changelog@3
                   @semantic-release/exec@3
                   @semantic-release/git@7
      deploy:
        provider: 'script'
        # Opt-in to `dpl v2` to complete the Travis build config validation (beta)
        # * https://docs.travis-ci.com/user/build-config-validation
        # Deprecated `skip_cleanup` can now be avoided, `cleanup: false` is by default
        edge: true
        # Run `semantic-release`
        script: 'npx semantic-release@15.14'

# Notification options: `always`, `never` or `change`
notifications:
  webhooks:
    if: 'repo = saltstack-formulas/salt-formula'
    urls:
      - https://saltstack-formulas.zulipchat.com/api/v1/external/travis?api_key=HsIq3o5QmLxdnVCKF9is0FUIpkpAY79P&stream=CI&topic=saltstack-formulas%2Fsalt-formula&ignore_pull_requests=true
    on_success: always  # default: always
    on_failure: always  # default: always
    on_start: always    # default: never
    on_cancel: always   # default: always
    on_error: always    # default: always
